[[enum]]
== General use of `enum`

ifdef::slides[:leveloffset: -1]

=== Modeling

ifndef::slides[.Example in UML]
image::enum.png[width=50%,link=images/enum.png,,scaledwidth=30%]

=== Propriétés

[source,java]
----------
public enum Civilite {
  MADAME, MONSIEUR
}
----------

- Each element of an enum is an object
- `enum` inherits from `java.lang.Enum`
- Methods can be added

=== Basic methods

* `toString()`
+
[source,java]
----------
System.out.println(Civilite.MADAME); //MADAME
----------
+
* `valueOf()`
+
[source,java]
----------
Civilite civilite = Civilite.valueOf("MONSIEUR") ;
----------
+
* `values()`
+
[source,java]
----------
Civilite[] civilites = Civilite.values() ;
----------
+
* `ordinal()`
+
[source,java]
----------
Civilite civilite = Civilite.MONSIEUR ;
System.out.println("Civilite : " + civilite + " [" + civilite.ordinal() + "]") ;
// Civilite : MONSIEUR [1]
----------
+
NOTE: First number is 0.
+
* `compareTo()`
+
[source,java]
----------
System.out.println(Civilite.MADAME.compareTo(Civilite.MONSIEUR)) ;
// -1
----------

=== More complex example

.(source : http://openclassrooms.com/courses/apprenez-a-programmer-en-java/les-enumerations-1)
[source,java]
----------
public enum Langage {
  //Objets directement construits
  JAVA("Langage JAVA", "Eclipse"),
  C ("Lanage C", "Code Block"),
  CPlus ("Langage C++", "Visual studio"),
  PHP ("Langage PHP", "PS Pad");

  private String name = "";
  private String editor = "";

  //Constructeur
  Langage(String name, String editor){
    this.name = name;
    this.editor = editor;
  }

  public void getEditor(){
    System.out.println("Editeur : " + editor);
  }

  public String toString(){
    return name;
  }

  public static void main(String args[]){
    Langage l1 = Langage.JAVA;
    Langage l2 = Langage.PHP;

    l1.getEditor();
    l2.getEditor();
  }
}
----------

ifdef::slides[]

=== Questions?

[icon="{iconsdir}/tuxteacher.png"]
[IMPORTANT]
====
====

endif::slides[]

ifdef::slides[:leveloffset: +1]
